import { useState, useEffect } from 'react';
import './App.css';

function App() {
  const [clicks, setClicks] = useState(0);

  // Оголошуємо ефект

  // монтування
  // Якщо другим аргументом хука useEffect передати
  // порожній масив, то такий ефект виконається лише
  // один раз - на етапі монтування компонента, і більше ніколи.
  useEffect(() => {
    console.log('You can see me only once');
  }, []);

  /** Хук useEffect(callback, deps) оголошує ефект,
   * який приймає два аргументи:
   *  - Перший аргумент callback завжди є анонімною
   * функцією, всередині якої виконується вся логіка
   * ефекту. Наприклад, запити на сервер, запис у
   * локальне сховище і т.п.
   *  - Другий аргумент deps - це масив залежностей
   * ефекту. Коли будь-яка з цих залежностей змінюється,
   * ефект буде викликаний і виконувати callback. Це
   * може бути стан, пропси або будь-яке локальне
   * значення всередині компонента.
   *
   * Хук useEffect не повертає жодного значення як результат
   * своєї роботи, а лише запускає виконання анонімної функції.
   * Іншими словами, неможливо виконати в середині функції
   * обчислення і повернути їх у зовнішній код.
   * Ефекти не призначені для цього!
   */
  return (
    <>
      <button onClick={() => setClicks(clicks + 1)}>
        You clicked {clicks} times
      </button>
    </>
  );
}

export default App;
